# SPDX-FileCopyrightText: Copyright (c) 2022 Tammy Cravit
#
# SPDX-License-Identifier: MIT

[project]
name = "tmt_carddeck"
version = "0.1.0"
description = "CircuitPython Card Deck library"
authors = [
    { name = "Tammy Cravit", email = "tammy@tammymakesthings.com" },
]
license = "MIT"
readme = "README.rst"
homepage = "https://github.com/tammymakesthings/Tmt_CircuitPython_carddeck"
repository = "https://github.com/tammymakesthings/Tmt_CircuitPython_carddeck"
keywords = [
    "cards",
    "card deck",
    "circuitpython",
    "displayio",
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: Other Environment",
    "Framework :: CircuitPython",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: Embedded",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: MicroPython",
    "Programming Language :: Python :: Implementation :: CircuitPython",
    "Topic :: Games/Entertainment :: Card Games",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Other/Nonlisted Topic",
    "Topic :: Software Development :: Libraries",
    "Topic :: System :: Hardware",
]

[tool.poetry]
name = "tmt_carddeck"
version = "0.1.0"
description = "CircuitPython Card Deck library"
authors = ["Tammy Cravit <tammy@tammymakesthings.com>"]
license = "MIT"
readme = "README.rst"
homepage = "https://github.com/tammymakesthings/Tmt_CircuitPython_carddeck"
repository = "https://github.com/tammymakesthings/Tmt_CircuitPython_carddeck"
keywords = [
    "cards",
    "card deck",
    "circuitpython",
    "displayio",
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: Other Environment",
    "Framework :: CircuitPython",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: Embedded",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: MicroPython",
    "Programming Language :: Python :: Implementation :: CircuitPython",
    "Topic :: Games/Entertainment :: Card Games",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Other/Nonlisted Topic",
    "Topic :: Software Development :: Libraries",
    "Topic :: System :: Hardware",
]

[tool.poetry.dependencies]
python = "^3.8"
blinka-displayio-pygamedisplay = "^1.0.0"
adafruit-circuitpython-display-shapes = "^2.4.2"
adafruit-circuitpython-display-text = "^2.22.2"
adafruit-circuitpython-bitmap-font = "^1.5.6"
adafruit-circuitpython-imageload = "^1.15.4"
adafruit-circuitpython-displayio-layout = "^1.17.0"
mypy = "^0.942"
recordclass = "^0.17.2"

[tool.poetry.dev-dependencies]
click = "^8.0.4"
pytest = "^7.1.1"
pytest-cov = "^3.0.0"
pytest-mock = "^3.7.0"
coverage = "^6.3.2"
black = "^22.3.0"
pylint = "^2.13.4"
pre-commit = "^2.17.0"
ipython = "^8.2.0"
isort = "^5.10.1"

[tool.black]
target-version = ['py35']
line-length = 100

[tool.flake8]
max-line-length = 100

[tool.pytest.ini_options]
minversion = 7.0
addopts = """\
    --color=auto \
    --cov-fail-under=95 \
    --cov= \
    --cov-report=xml:coverage.xml \
    --cov-report=html:coverage_html \
    --durations=0 \
    --no-cov-on-fail \
    --new-first \
    --durations=5 \
    --doctest-modules \
    --doctest-continue-on-failure \
    """
testpaths = [
    "tests",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
